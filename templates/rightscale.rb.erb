#!/opt/puppet/bin/ruby

#setup environment first
require 'etc'
ENV['HOME'] = Etc.getpwuid(Process.uid).dir

#require 'right_api_client'
require 'puppet'
require 'puppet/ssl/certificate_request'
require 'puppet/util'
require 'syslog'

clientcert = ARGV.pop
token = <%= @right_token %>
account_id = <%= @right_account %>
api_url = <%= @right_api %>

Syslog.open("autosigner", Syslog::LOG_PID, Syslog::LOG_SYSLOG)
csr = Puppet::SSL::CertificateRequest.from_s(STDIN.read)


if csr.request_extensions.find { |a| a['oid'] == '1.3.6.1.4.1.34380.1.2.1' }
  instance_id = csr.request_extensions.find { |a| a['oid'] == '1.3.6.1.4.1.34380.1.2.1' }['value']
else
  return_code = -1
end

if instance_id
  begin
    @client = RightApi::Client.new(:instance_token => token, :account_id => account_id)
    @client.api_url = api_url
    if @client.servers(:id => instance_id).show {
      return_code = 0
      Syslog.log(Syslog::LOG_INFO,"CSR is valid for autosigning")
    } else {
      return_code  = 1
      Syslog.log(Syslog::LOG_INFO,"CSR is invalid and will not be signed")
    }
  rescue Exception => e
    puts e.message
  end
end

exit return_code
